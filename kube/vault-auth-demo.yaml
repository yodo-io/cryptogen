# Just an example to test successful setup of vault with k8s auth. 
# To verify, run:
# 
# ```
# $ kubectl apply -f <path-to-this-file>
# ... wait for init to complete ...
# $ kubectl exec vault-sidecar cat /home/vault/.vault-token
# ... a vault token should be printed ...
# ```
# 
# See https://github.com/sethvargo/vault-kubernetes-authenticator
---
apiVersion: v1
kind: Pod
metadata:
  name: vault-sidecar
spec:
  volumes:
  - name: vault-token
    emptyDir:
      medium: Memory
  # TLS certs generated by bank-vaults, including the CA cert needed for verification
  # It also contains the CA private keys, which is totally secure ;P
  - name: vault-tls
    secret:
      secretName: vault-vault-tls

  initContainers:
  # The vault-authenticator container authenticates the container using the
  # kubernetes auth method and puts the resulting token on the filesystem.
  - name: vault-authenticator
    image: sethvargo/vault-kubernetes-authenticator:latest
    volumeMounts:
    - name: vault-token
      mountPath: /home/vault
    - name: vault-tls
      mountPath: /etc/vault/tls
    env:
    - name: TOKEN_DEST_PATH
      value: /home/vault/.vault-token
    - name: VAULT_ROLE
      value: default
    - name: VAULT_CACERT
      value: /etc/vault/tls/ca.crt
    - name: VAULT_ADDR
      value: https://vault-vault.default:8200

  # Just a no-op nginx container, exec into it to check the token being present
  containers:
  - name: nginx
    image: nginx:latest
    volumeMounts:
    - name: vault-token
      mountPath: /home/vault
    env:
    - name: HOME
      value: /home/vault
